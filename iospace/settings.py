"""
Django settings for iospace project.

Generated by 'django-admin startproject' using Django 3.2.25.

For more information on this file, see
https://docs.djangoproject.com/en/3.2/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/3.2/ref/settings/
"""

from pathlib import Path
import os
import ldap
from django_auth_ldap.config import LDAPSearch, GroupOfNamesType, PosixGroupType
# Build paths inside the project like this: BASE_DIR / 'subdir'.
BASE_DIR = Path(__file__).resolve().parent.parent


# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/3.2/howto/deployment/checklist/

# SECURITY WARNING: keep the secret key used in production secret!
SECRET_KEY = 'django-insecure-^u_irsbv3qw7el#^(@e2@nd-%hn3#03$brv+v8($^z6if_41wz'

# SECURITY WARNING: don't run with debug turned on in production!
DEBUG = True

ALLOWED_HOSTS = ["127.0.0.1", "localhost"]

# Application definition

INSTALLED_APPS = [
    'django.contrib.admin',
    'django.contrib.auth',
    'django_tables2',
    'django.contrib.contenttypes',
    'django.contrib.sessions',
    'django.contrib.messages',
    'django.contrib.staticfiles',
    'projects',
    "corsheaders"
]

AUTHENTICATION_BACKENDS = [
    'django_auth_ldap.backend.LDAPBackend',
    'django.contrib.auth.backends.ModelBackend', 
]

MIDDLEWARE = [
    'django.middleware.security.SecurityMiddleware',
    'django.contrib.sessions.middleware.SessionMiddleware',
    'django.middleware.common.CommonMiddleware',
    'django.middleware.csrf.CsrfViewMiddleware',
    'django.contrib.auth.middleware.AuthenticationMiddleware',
    'django.contrib.messages.middleware.MessageMiddleware',
    'django.middleware.clickjacking.XFrameOptionsMiddleware',
    "corsheaders.middleware.CorsMiddleware"
]

ROOT_URLCONF = 'iospace.urls'

TEMPLATES = [
    {
        'BACKEND': 'django.template.backends.django.DjangoTemplates',
        'DIRS': [],
        'APP_DIRS': True,
        'OPTIONS': {
            'context_processors': [
                'django.template.context_processors.debug',
                'django.template.context_processors.request',
                'django.contrib.auth.context_processors.auth',
                'django.contrib.messages.context_processors.messages',
            ],
        },
    },
]

WSGI_APPLICATION = 'iospace.wsgi.application'


# Database
# https://docs.djangoproject.com/en/3.2/ref/settings/#databases

DATABASES = {
    'default': {
        'ENGINE': 'django.db.backends.sqlite3',
        'NAME': BASE_DIR / 'db.sqlite3',
    }
}




# Password validation
# https://docs.djangoproject.com/en/3.2/ref/settings/#auth-password-validators

AUTH_PASSWORD_VALIDATORS = [
    {
        'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator',
    },
]


# Internationalization
# https://docs.djangoproject.com/en/3.2/topics/i18n/

LANGUAGE_CODE = 'en-us'

TIME_ZONE = 'UTC'

USE_I18N = True

USE_L10N = True

USE_TZ = True

CORS_ALLOW_ALL_ORIGINS = True

# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/3.2/howto/static-files/


STATIC_URL = '/static/'
STATIC_ROOT = os.path.join(BASE_DIR, 'staticfiles')  
STATICFILES_DIRS = [
    os.path.join(BASE_DIR, 'static'),  
]

# Default primary key field type
# https://docs.djangoproject.com/en/3.2/ref/settings/#default-auto-field

DEFAULT_AUTO_FIELD = 'django.db.models.BigAutoField'



# LDAP Server URI
AUTH_LDAP_SERVER_URI = "ldap://hb-dc-01.d2-india.com"

main_dn = 'DC=d2-india,DC=com'
groups_dn = 'OU=Groups,'+main_dn
users_dn = 'OU=Users,'+main_dn

# Binding user credentials
AUTH_LDAP_BIND_DN = "CN=ad-reader-svc,OU=service-accounts,OU=production,OU=users,OU=active,OU=d2-india,DC=d2-india,DC=com"
AUTH_LDAP_BIND_PASSWORD =  "byGTtqBmAk8j4bP5nXDM"

# User search base and filter
AUTH_LDAP_MIRROR_GROUPS = True



AUTH_LDAP_USER_SEARCH = LDAPSearch(
    "OU=users,OU=active,OU=d2-india,DC=d2-india,DC=com",
    ldap.SCOPE_SUBTREE,
    "(sAMAccountName=%(user)s)"  # Adjust based on your LDAP server
)

AUTH_LDAP_GROUP_SEARCH = LDAPSearch(
    "OU=groups,OU=active,OU=d2-india,DC=d2-india,DC=com",
    ldap.SCOPE_SUBTREE,
    "(objectClass=cgi)"  # Adjust based on your LDAP server
)

AUTH_LDAP_REQUIRE_GROUP = "CN=cgi,OU=groups,OU=active,OU=d2-india,DC=d2-india,DC=com"


AUTH_LDAP_GROUP_TYPE = PosixGroupType(name_attr="cn")

AUTH_LDAP_USER_ATTR_MAP = {
    "first_name": "givenName",
    "last_name": "sn",
    "email": "mail",
    "username":"uid",
    "password":"userPassword",
}

# Mirror LDAP groups in Django

# Cache groups for performance
AUTH_LDAP_CACHE_TIMEOUT = 3600

# Automatically create Django user accounts for LDAP users
AUTH_LDAP_CREATE_USERS = True  # Add users to the Django database upon first login
AUTH_LDAP_ALWAYS_UPDATE_USER = True  # Always sync LDAP attributes to Django user fields

# Authentication backends
AUTHENTICATION_BACKENDS = [
    'django_auth_ldap.backend.LDAPBackend',
    'django.contrib.auth.backends.ModelBackend',  # Default Django authentication
]


LOGIN_REDIRECT_URL = '/'  # Redirect to the home page after login
LOGOUT_REDIRECT_URL = '/login/'  # Redirect to login page after logout
LOGIN_URL = '/login/'
# Enable LDAP logging for debugging
import logging
logger = logging.getLogger('django_auth_ldap')
logger.addHandler(logging.StreamHandler())
logger.setLevel(logging.DEBUG)




def custom_populate_user(ldap_user, user):
    user.is_staff = True  # Required for admin access
    user.is_superuser = True  # Optional, grants full admin rights
    user.save()

AUTH_LDAP_USER_FLAGS_BY_GROUP = {
    "is_staff": "cn=cgi,ou=groups,ou=active,ou=d2-india,dc=d2-india,dc=com",
    "is_superuser": "cn=admins,ou=groups,ou=active,ou=d2-india,dc=d2-india,dc=com",
}

AUTH_LDAP_POPULATE_USER = custom_populate_user






